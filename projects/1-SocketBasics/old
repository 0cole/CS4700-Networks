#!/usr/bin/python3
import socket
import json

SERVER_HOST = 'proj1.4700.network'
SERVER_PORT = 27993
USER_NAME = 'harvey.c'

def createWordlist():
    word_list = []
    file = open('wordlist.txt', 'r')
    line = file.readline()
    while line:
        word_list.append(line.replace('\n', ''))
        line = file.readline()

    return word_list

def connect():
    client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        client.connect((SERVER_HOST, SERVER_PORT))
    except socket.error as e:
        print(f'ERROR: {e}')
        return
    return client

def sendMessage(socket, message):
    msg_str = json.dumps(message) + '\n'
    socket.sendall(msg_str.encode('ascii'))

def receiveMessage(socket: socket.socket):
    buf = ''
    while True:
        try:
            chunk = socket.recv(4096).decode('ascii')
            if chunk is None:
                break
            buf += chunk

            try:
                res_json = json.loads(buf)
                return res_json
            except json.JSONDecodeError as e:
                continue
            
        except socket.error as e:
            print(f'Socket error: {e}')
            break

    print('Something went wrong parsing the json')
    return None
    
def run():
    s = connect()
    words = createWordlist()
    final = [None, None, None, None, None]
    alphabet = {chr(i) for i in range(ord('a'), ord('z') + 1)}
    avail = [alphabet, alphabet, alphabet, alphabet, alphabet]
    possible = [set(), set(), set(), set(), set()]
    exclude = set()
    flag = None

    init_msg = {'type': 'hello', 'northeastern_username': USER_NAME}
    sendMessage(s, init_msg)

    msg = receiveMessage(s)
    id = msg['id']

    found = False
    guess_word = words[0]
    while not found:

        guess_msg = {'type': 'guess', 'id': id, 'word': guess_word}
        sendMessage(s, guess_msg)
        msg = receiveMessage(s)

        if msg['type'] == 'bye':
            # Guessed correctly
            flag = msg['flag']
            print(flag)
            found = True
            break
        elif msg['type'] == 'retry':
            # Guessed incorrectly
            marks = msg['guesses'][-1]['marks']
            for i in range(5):
                letter = guess_word[i]
                if marks[i] == 0:
                    exclude.add(letter)
                    for avail_set in avail:
                        avail_set.discard(letter)
                elif marks[i] == 1:
                   for j in range(5):
                        if i != j and not final[j] and letter not in exclude:
                            possible[j].add(letter)
                elif marks[i] == 2:
                    final[i] = letter
                    exclude.discard(letter)
                    possible[i] = {letter}

        for word in words:
            if any(word[i] in exclude for i in range(5)):
                continue
            if any(final[i] and final[i] != word[i] for i in range(5)):
                continue
            # if any(possible[i] and word[i] not in possible[i] for i in range(5)):
            #     continue
            guess_word = word
            break

    s.close()

if __name__ == '__main__':
    run()
